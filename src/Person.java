import java.util.Random;

/**
 * –ö–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–≥—Ä–æ–∫–∞
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏–≥—Ä–æ–∫–∞
 */
public class Person {
    // üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    protected int x, y;
    private String image = "\uD83E\uDDD9\u200D"; // üßô –ú–∞–≥
    private int live = 3;
    private Random r = new Random();

    // üìè –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    private static final int MIN_POSITION = 1;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
     * @param sizeBoard —Ä–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
     */
    public Person(int sizeBoard) {
        y = sizeBoard;
        int n = r.nextInt(sizeBoard);
        x = n == 0 ? MIN_POSITION : n;
    }

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
     * @param x –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X
     * @param y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
     */
    public Person(int x, int y) {
        this.x = x;
        this.y = y;
    }

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    public Person() {
        this(MIN_POSITION, MIN_POSITION);
    }

    // üîÑ –ì–µ—Ç—Ç–µ—Ä—ã
    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public int getLive() {
        return live;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ö–æ–¥–∞
     * @param x —Ü–µ–ª–µ–≤–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X
     * @param y —Ü–µ–ª–µ–≤–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
     * @return true –µ—Å–ª–∏ —Ö–æ–¥ –¥–æ–ø—É—Å—Ç–∏–º
     */
    public boolean moveCorrect(int x, int y) {
        boolean horizontalMove = this.y == y && Math.abs(this.x - x) == 1;
        boolean verticalMove = this.x == x && Math.abs(this.y - y) == 1;
        return horizontalMove || verticalMove;
    }

    /**
     * –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
     * @param x –Ω–æ–≤–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X
     * @param y –Ω–æ–≤–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
     */
    void move(int x, int y) {
        this.x = x;
        this.y = y;
        System.out.println("üéØ –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –ø–æ–∑–∏—Ü–∏—é (" + x + ", " + y + ")");
    }

    /**
     * –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∏–∑–Ω–µ–π
     */
    public void downLive() {
        live--;
        System.out.println("üíî –ü–æ—Ç–µ—Ä—è–Ω–∞ –∂–∏–∑–Ω—å! –û—Å—Ç–∞–ª–æ—Å—å: " + live);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–∏–≤ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂
     * @return true –µ—Å–ª–∏ —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –µ—Å—Ç—å –∂–∏–∑–Ω–∏
     */
    public boolean isAlive() {
        return live > 0;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
     * @return —Å—Ç—Ä–æ–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
     */
    @Override
    public String toString() {
        return "–ü–µ—Ä—Å–æ–Ω–∞–∂ " + image + " –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ (" + x + ", " + y + ") —Å " + live + " –∂–∏–∑–Ω—è–º–∏";
    }
}