import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        String castle = "\uD83C\uDFF0";
        int sizeBoard = 5;

        Person person = new Person(sizeBoard);
        int step = 0;

        String[][] board = new String[sizeBoard][sizeBoard];
        for (int y = 0; y < sizeBoard; y++) {
            for (int x = 0; x < sizeBoard; x++) {
                board[y][x] = "  ";
            }
        }

        int countMonster = sizeBoard * sizeBoard - sizeBoard - 5;
        Random r = new Random();

        Monster[] arrMonster = new Monster[countMonster + 1];
        int count = 0;

        while (count <= countMonster) {
            Monster test;
            int monsterType = r.nextInt(3); // 0 - –æ–±—ã—á–Ω—ã–π, 1 - –±–æ–ª—å—à–æ–π, 2 - –ø—Ä–∏–∑—Ä–∞–∫

            switch (monsterType) {
                case 0:
                    test = new Monster(sizeBoard);
                    break;
                case 1:
                    test = new BigMonster(sizeBoard);
                    break;
                case 2:
                    test = new Gost(sizeBoard); // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∑—Ä–∞–∫–æ–≤
                    break;
                default:
                    test = new Monster(sizeBoard);
            }

            if (board[test.getY()][test.getX()].equals("  ")) {
                board[test.getY()][test.getX()] = test.getImage();
                arrMonster[count] = test;
                count++;
            }
        }

        int castleX = r.nextInt(sizeBoard);
        int castleY = 0;
        board[castleY][castleX] = castle;

        System.out.println("–ü—Ä–∏–≤–µ—Ç! –¢—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É? (–ù–∞–ø–∏—à–∏: –î–ê –∏–ª–∏ –ù–ï–¢)");

        Scanner sc = new Scanner(System.in);
        String answer = sc.nextLine();
        System.out.println("–í–∞—à –æ—Ç–≤–µ—Ç: " + answer);

        switch (answer) {
            case "–î–ê" -> {
                System.out.println("–í—ã–±–µ—Ä–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã(–æ—Ç 1 –¥–æ 5):");
                int difficultGame = sc.nextInt();
                sc.nextLine(); // –æ—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞
                System.out.println("–í—ã–±—Ä–∞–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: " + difficultGame);

                while (person.getLive() > 0) {
                    board[person.getY() - 1][person.getX() - 1] = person.getImage();
                    outputBoard(board, person.getLive());

                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (W - –≤–≤–µ—Ä—Ö, S - –≤–Ω–∏–∑, A - –≤–ª–µ–≤–æ, D - –≤–ø—Ä–∞–≤–æ):");
                    String direction = sc.nextLine().toUpperCase();

                    int newX = person.getX();
                    int newY = person.getY();

                    switch (direction) {
                        case "W" -> newY--;
                        case "S" -> newY++;
                        case "A" -> newX--;
                        case "D" -> newX++;
                        default -> {
                            System.out.println("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ W, A, S, D");
                            continue;
                        }
                    }

                    if (person.moveCorrect(newX, newY)) {
                        String nextCell = board[newY - 1][newX - 1];

                        if (nextCell.equals("  ")) {
                            // –°–≤–æ–±–æ–¥–Ω–∞—è –∫–ª–µ—Ç–∫–∞
                            board[person.getY() - 1][person.getX() - 1] = "  ";
                            person.move(newX, newY);
                            step++;
                            System.out.println("‚úÖ –•–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π; –ù–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: " + person.getX() + ", " + person.getY() +
                                    "\n–•–æ–¥ –Ω–æ–º–µ—Ä: " + step);
                        } else if (nextCell.equals(castle)) {
                            // –ü–æ–±–µ–¥–∞!
                            System.out.println("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É!");
                            break;
                        } else {
                            // –í—Å—Ç—Ä–µ—á–∞ —Å –º–æ–Ω—Å—Ç—Ä–æ–º
                            for (Monster monster : arrMonster) {
                                if (monster != null && monster.conflictPerson(newX, newY)) {
                                    System.out.println("‚öîÔ∏è  –í—Å—Ç—Ä–µ—á–∞ —Å " +
                                            (monster instanceof Gost ? "–ø—Ä–∏–∑—Ä–∞–∫–æ–º" :
                                                    monster instanceof BigMonster ? "–±–æ–ª—å—à–∏–º –º–æ–Ω—Å—Ç—Ä–æ–º" : "–º–æ–Ω—Å—Ç—Ä–æ–º"));

                                    if (monster.taskMonster(difficultGame)) {
                                        board[person.getY() - 1][person.getX() - 1] = "  ";
                                        person.move(newX, newY);
                                        board[person.getY() - 1][person.getX() - 1] = person.getImage();
                                    } else {
                                        person.downLive();
                                        System.out.println("üíî –û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π: " + person.getLive());
                                    }
                                    break;
                                }
                            }
                        }
                    } else {
                        System.out.println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ö–æ–¥! –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—è.");
                    }

                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–∏–≥—Ä—ã—à
                    if (person.getLive() <= 0) {
                        System.out.println("üíÄ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏.");
                        break;
                    }
                }
            }
            case "–ù–ï–¢" -> System.out.println("–ñ–∞–ª—å, –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ!");
            default -> System.out.println("–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
        }

        sc.close();
    }

    static void outputBoard(String[][] board, int live) {
        String wall = "+ ‚Äî‚Äî + ‚Äî‚Äî + ‚Äî‚Äî + ‚Äî‚Äî + ‚Äî‚Äî +";

        for (String[] raw : board) {
            System.out.println(wall);
            System.out.print("| ");
            for (String col : raw) {
                System.out.print(col + " | ");
            }
            System.out.println();
        }
        System.out.println(wall);
        System.out.println("‚ù§Ô∏è  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–π: " + live + "\n");
    }
}